<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.poc.dao.mapper.BatchStepExecutionMapper" >
  <resultMap id="BaseResultMap" type="com.example.poc.dao.model.BatchStepExecution" >
    <id column="step_execution_id" property="stepExecutionId" jdbcType="BIGINT" />
    <result column="version" property="version" jdbcType="BIGINT" />
    <result column="step_name" property="stepName" jdbcType="VARCHAR" />
    <result column="job_execution_id" property="jobExecutionId" jdbcType="BIGINT" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="commit_count" property="commitCount" jdbcType="BIGINT" />
    <result column="read_count" property="readCount" jdbcType="BIGINT" />
    <result column="filter_count" property="filterCount" jdbcType="BIGINT" />
    <result column="write_count" property="writeCount" jdbcType="BIGINT" />
    <result column="read_skip_count" property="readSkipCount" jdbcType="BIGINT" />
    <result column="write_skip_count" property="writeSkipCount" jdbcType="BIGINT" />
    <result column="process_skip_count" property="processSkipCount" jdbcType="BIGINT" />
    <result column="rollback_count" property="rollbackCount" jdbcType="BIGINT" />
    <result column="exit_code" property="exitCode" jdbcType="VARCHAR" />
    <result column="exit_message" property="exitMessage" jdbcType="VARCHAR" />
    <result column="last_updated" property="lastUpdated" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    step_execution_id, version, step_name, job_execution_id, start_time, end_time, status, 
    commit_count, read_count, filter_count, write_count, read_skip_count, write_skip_count, 
    process_skip_count, rollback_count, exit_code, exit_message, last_updated
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.poc.dao.model.BatchStepExecutionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from batch_step_execution
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from batch_step_execution
    where step_execution_id = #{stepExecutionId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from batch_step_execution
    where step_execution_id = #{stepExecutionId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.poc.dao.model.BatchStepExecution" >
    insert into batch_step_execution (step_execution_id, version, step_name, 
      job_execution_id, start_time, end_time, 
      status, commit_count, read_count, 
      filter_count, write_count, read_skip_count, 
      write_skip_count, process_skip_count, rollback_count, 
      exit_code, exit_message, last_updated
      )
    values (#{stepExecutionId,jdbcType=BIGINT}, #{version,jdbcType=BIGINT}, #{stepName,jdbcType=VARCHAR}, 
      #{jobExecutionId,jdbcType=BIGINT}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=VARCHAR}, #{commitCount,jdbcType=BIGINT}, #{readCount,jdbcType=BIGINT}, 
      #{filterCount,jdbcType=BIGINT}, #{writeCount,jdbcType=BIGINT}, #{readSkipCount,jdbcType=BIGINT}, 
      #{writeSkipCount,jdbcType=BIGINT}, #{processSkipCount,jdbcType=BIGINT}, #{rollbackCount,jdbcType=BIGINT}, 
      #{exitCode,jdbcType=VARCHAR}, #{exitMessage,jdbcType=VARCHAR}, #{lastUpdated,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.poc.dao.model.BatchStepExecution" >
    insert into batch_step_execution
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="stepExecutionId != null" >
        step_execution_id,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="stepName != null" >
        step_name,
      </if>
      <if test="jobExecutionId != null" >
        job_execution_id,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="commitCount != null" >
        commit_count,
      </if>
      <if test="readCount != null" >
        read_count,
      </if>
      <if test="filterCount != null" >
        filter_count,
      </if>
      <if test="writeCount != null" >
        write_count,
      </if>
      <if test="readSkipCount != null" >
        read_skip_count,
      </if>
      <if test="writeSkipCount != null" >
        write_skip_count,
      </if>
      <if test="processSkipCount != null" >
        process_skip_count,
      </if>
      <if test="rollbackCount != null" >
        rollback_count,
      </if>
      <if test="exitCode != null" >
        exit_code,
      </if>
      <if test="exitMessage != null" >
        exit_message,
      </if>
      <if test="lastUpdated != null" >
        last_updated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="stepExecutionId != null" >
        #{stepExecutionId,jdbcType=BIGINT},
      </if>
      <if test="version != null" >
        #{version,jdbcType=BIGINT},
      </if>
      <if test="stepName != null" >
        #{stepName,jdbcType=VARCHAR},
      </if>
      <if test="jobExecutionId != null" >
        #{jobExecutionId,jdbcType=BIGINT},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="commitCount != null" >
        #{commitCount,jdbcType=BIGINT},
      </if>
      <if test="readCount != null" >
        #{readCount,jdbcType=BIGINT},
      </if>
      <if test="filterCount != null" >
        #{filterCount,jdbcType=BIGINT},
      </if>
      <if test="writeCount != null" >
        #{writeCount,jdbcType=BIGINT},
      </if>
      <if test="readSkipCount != null" >
        #{readSkipCount,jdbcType=BIGINT},
      </if>
      <if test="writeSkipCount != null" >
        #{writeSkipCount,jdbcType=BIGINT},
      </if>
      <if test="processSkipCount != null" >
        #{processSkipCount,jdbcType=BIGINT},
      </if>
      <if test="rollbackCount != null" >
        #{rollbackCount,jdbcType=BIGINT},
      </if>
      <if test="exitCode != null" >
        #{exitCode,jdbcType=VARCHAR},
      </if>
      <if test="exitMessage != null" >
        #{exitMessage,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdated != null" >
        #{lastUpdated,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.poc.dao.model.BatchStepExecution" >
    update batch_step_execution
    <set >
      <if test="version != null" >
        version = #{version,jdbcType=BIGINT},
      </if>
      <if test="stepName != null" >
        step_name = #{stepName,jdbcType=VARCHAR},
      </if>
      <if test="jobExecutionId != null" >
        job_execution_id = #{jobExecutionId,jdbcType=BIGINT},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="commitCount != null" >
        commit_count = #{commitCount,jdbcType=BIGINT},
      </if>
      <if test="readCount != null" >
        read_count = #{readCount,jdbcType=BIGINT},
      </if>
      <if test="filterCount != null" >
        filter_count = #{filterCount,jdbcType=BIGINT},
      </if>
      <if test="writeCount != null" >
        write_count = #{writeCount,jdbcType=BIGINT},
      </if>
      <if test="readSkipCount != null" >
        read_skip_count = #{readSkipCount,jdbcType=BIGINT},
      </if>
      <if test="writeSkipCount != null" >
        write_skip_count = #{writeSkipCount,jdbcType=BIGINT},
      </if>
      <if test="processSkipCount != null" >
        process_skip_count = #{processSkipCount,jdbcType=BIGINT},
      </if>
      <if test="rollbackCount != null" >
        rollback_count = #{rollbackCount,jdbcType=BIGINT},
      </if>
      <if test="exitCode != null" >
        exit_code = #{exitCode,jdbcType=VARCHAR},
      </if>
      <if test="exitMessage != null" >
        exit_message = #{exitMessage,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdated != null" >
        last_updated = #{lastUpdated,jdbcType=TIMESTAMP},
      </if>
    </set>
    where step_execution_id = #{stepExecutionId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.poc.dao.model.BatchStepExecution" >
    update batch_step_execution
    set version = #{version,jdbcType=BIGINT},
      step_name = #{stepName,jdbcType=VARCHAR},
      job_execution_id = #{jobExecutionId,jdbcType=BIGINT},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      commit_count = #{commitCount,jdbcType=BIGINT},
      read_count = #{readCount,jdbcType=BIGINT},
      filter_count = #{filterCount,jdbcType=BIGINT},
      write_count = #{writeCount,jdbcType=BIGINT},
      read_skip_count = #{readSkipCount,jdbcType=BIGINT},
      write_skip_count = #{writeSkipCount,jdbcType=BIGINT},
      process_skip_count = #{processSkipCount,jdbcType=BIGINT},
      rollback_count = #{rollbackCount,jdbcType=BIGINT},
      exit_code = #{exitCode,jdbcType=VARCHAR},
      exit_message = #{exitMessage,jdbcType=VARCHAR},
      last_updated = #{lastUpdated,jdbcType=TIMESTAMP}
    where step_execution_id = #{stepExecutionId,jdbcType=BIGINT}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.example.poc.dao.model.BatchStepExecutionExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from batch_step_execution
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>