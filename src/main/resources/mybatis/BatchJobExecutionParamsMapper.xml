<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.poc.dao.mapper.BatchJobExecutionParamsMapper" >
  <resultMap id="BaseResultMap" type="com.example.poc.dao.model.BatchJobExecutionParams" >
    <result column="job_execution_id" property="jobExecutionId" jdbcType="BIGINT" />
    <result column="type_cd" property="typeCd" jdbcType="VARCHAR" />
    <result column="key_name" property="keyName" jdbcType="VARCHAR" />
    <result column="string_val" property="stringVal" jdbcType="VARCHAR" />
    <result column="date_val" property="dateVal" jdbcType="TIMESTAMP" />
    <result column="long_val" property="longVal" jdbcType="BIGINT" />
    <result column="double_val" property="doubleVal" jdbcType="DOUBLE" />
    <result column="identifying" property="identifying" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    job_execution_id, type_cd, key_name, string_val, date_val, long_val, double_val, 
    identifying
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.poc.dao.model.BatchJobExecutionParamsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from batch_job_execution_params
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <insert id="insert" parameterType="com.example.poc.dao.model.BatchJobExecutionParams" >
    insert into batch_job_execution_params (job_execution_id, type_cd, key_name, 
      string_val, date_val, long_val, 
      double_val, identifying)
    values (#{jobExecutionId,jdbcType=BIGINT}, #{typeCd,jdbcType=VARCHAR}, #{keyName,jdbcType=VARCHAR}, 
      #{stringVal,jdbcType=VARCHAR}, #{dateVal,jdbcType=TIMESTAMP}, #{longVal,jdbcType=BIGINT}, 
      #{doubleVal,jdbcType=DOUBLE}, #{identifying,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.poc.dao.model.BatchJobExecutionParams" >
    insert into batch_job_execution_params
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="jobExecutionId != null" >
        job_execution_id,
      </if>
      <if test="typeCd != null" >
        type_cd,
      </if>
      <if test="keyName != null" >
        key_name,
      </if>
      <if test="stringVal != null" >
        string_val,
      </if>
      <if test="dateVal != null" >
        date_val,
      </if>
      <if test="longVal != null" >
        long_val,
      </if>
      <if test="doubleVal != null" >
        double_val,
      </if>
      <if test="identifying != null" >
        identifying,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="jobExecutionId != null" >
        #{jobExecutionId,jdbcType=BIGINT},
      </if>
      <if test="typeCd != null" >
        #{typeCd,jdbcType=VARCHAR},
      </if>
      <if test="keyName != null" >
        #{keyName,jdbcType=VARCHAR},
      </if>
      <if test="stringVal != null" >
        #{stringVal,jdbcType=VARCHAR},
      </if>
      <if test="dateVal != null" >
        #{dateVal,jdbcType=TIMESTAMP},
      </if>
      <if test="longVal != null" >
        #{longVal,jdbcType=BIGINT},
      </if>
      <if test="doubleVal != null" >
        #{doubleVal,jdbcType=DOUBLE},
      </if>
      <if test="identifying != null" >
        #{identifying,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select resultMap="BaseResultMap" parameterType="com.example.poc.dao.model.BatchJobExecutionParamsExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from batch_job_execution_params
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>