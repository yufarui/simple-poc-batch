<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.poc.dao.mapper.TaskContextMapper" >
  <resultMap id="BaseResultMap" type="com.example.poc.dao.model.TaskContext" >
    <id column="task_execution_id" property="taskExecutionId" jdbcType="BIGINT" />
    <result column="task_type" property="taskType" jdbcType="VARCHAR" />
    <result column="task_name" property="taskName" jdbcType="VARCHAR" />
    <result column="task_order" property="taskOrder" jdbcType="BIGINT" />
    <result column="param" property="param" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    task_execution_id, task_type, task_name, task_order, param
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.poc.dao.model.TaskContextExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from task_context
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from task_context
    where task_execution_id = #{taskExecutionId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from task_context
    where task_execution_id = #{taskExecutionId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.poc.dao.model.TaskContextExample" >
    delete from task_context
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.poc.dao.model.TaskContext" >
    insert into task_context (task_execution_id, task_type, task_name, 
      task_order, param)
    values (#{taskExecutionId,jdbcType=BIGINT}, #{taskType,jdbcType=VARCHAR}, #{taskName,jdbcType=VARCHAR}, 
      #{taskOrder,jdbcType=BIGINT}, #{param,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.poc.dao.model.TaskContext" >
    insert into task_context
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="taskExecutionId != null" >
        task_execution_id,
      </if>
      <if test="taskType != null" >
        task_type,
      </if>
      <if test="taskName != null" >
        task_name,
      </if>
      <if test="taskOrder != null" >
        task_order,
      </if>
      <if test="param != null" >
        param,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="taskExecutionId != null" >
        #{taskExecutionId,jdbcType=BIGINT},
      </if>
      <if test="taskType != null" >
        #{taskType,jdbcType=VARCHAR},
      </if>
      <if test="taskName != null" >
        #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="taskOrder != null" >
        #{taskOrder,jdbcType=BIGINT},
      </if>
      <if test="param != null" >
        #{param,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map" >
    update task_context
    <set >
      <if test="record.taskExecutionId != null" >
        task_execution_id = #{record.taskExecutionId,jdbcType=BIGINT},
      </if>
      <if test="record.taskType != null" >
        task_type = #{record.taskType,jdbcType=VARCHAR},
      </if>
      <if test="record.taskName != null" >
        task_name = #{record.taskName,jdbcType=VARCHAR},
      </if>
      <if test="record.taskOrder != null" >
        task_order = #{record.taskOrder,jdbcType=BIGINT},
      </if>
      <if test="record.param != null" >
        param = #{record.param,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update task_context
    set task_execution_id = #{record.taskExecutionId,jdbcType=BIGINT},
      task_type = #{record.taskType,jdbcType=VARCHAR},
      task_name = #{record.taskName,jdbcType=VARCHAR},
      task_order = #{record.taskOrder,jdbcType=BIGINT},
      param = #{record.param,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.poc.dao.model.TaskContext" >
    update task_context
    <set >
      <if test="taskType != null" >
        task_type = #{taskType,jdbcType=VARCHAR},
      </if>
      <if test="taskName != null" >
        task_name = #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="taskOrder != null" >
        task_order = #{taskOrder,jdbcType=BIGINT},
      </if>
      <if test="param != null" >
        param = #{param,jdbcType=VARCHAR},
      </if>
    </set>
    where task_execution_id = #{taskExecutionId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.poc.dao.model.TaskContext" >
    update task_context
    set task_type = #{taskType,jdbcType=VARCHAR},
      task_name = #{taskName,jdbcType=VARCHAR},
      task_order = #{taskOrder,jdbcType=BIGINT},
      param = #{param,jdbcType=VARCHAR}
    where task_execution_id = #{taskExecutionId,jdbcType=BIGINT}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.example.poc.dao.model.TaskContextExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from task_context
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>