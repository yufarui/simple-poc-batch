<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.poc.dao.mapper.BatchJobExecutionMapper" >
  <resultMap id="BaseResultMap" type="com.example.poc.dao.model.BatchJobExecution" >
    <id column="job_execution_id" property="jobExecutionId" jdbcType="BIGINT" />
    <result column="version" property="version" jdbcType="BIGINT" />
    <result column="job_instance_id" property="jobInstanceId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="exit_code" property="exitCode" jdbcType="VARCHAR" />
    <result column="exit_message" property="exitMessage" jdbcType="VARCHAR" />
    <result column="last_updated" property="lastUpdated" jdbcType="TIMESTAMP" />
    <result column="job_configuration_location" property="jobConfigurationLocation" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    job_execution_id, version, job_instance_id, create_time, start_time, end_time, status, 
    exit_code, exit_message, last_updated, job_configuration_location
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.poc.dao.model.BatchJobExecutionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from batch_job_execution
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from batch_job_execution
    where job_execution_id = #{jobExecutionId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from batch_job_execution
    where job_execution_id = #{jobExecutionId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.poc.dao.model.BatchJobExecution" >
    insert into batch_job_execution (job_execution_id, version, job_instance_id, 
      create_time, start_time, end_time, 
      status, exit_code, exit_message, 
      last_updated, job_configuration_location
      )
    values (#{jobExecutionId,jdbcType=BIGINT}, #{version,jdbcType=BIGINT}, #{jobInstanceId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=VARCHAR}, #{exitCode,jdbcType=VARCHAR}, #{exitMessage,jdbcType=VARCHAR}, 
      #{lastUpdated,jdbcType=TIMESTAMP}, #{jobConfigurationLocation,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.poc.dao.model.BatchJobExecution" >
    insert into batch_job_execution
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="jobExecutionId != null" >
        job_execution_id,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="jobInstanceId != null" >
        job_instance_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="exitCode != null" >
        exit_code,
      </if>
      <if test="exitMessage != null" >
        exit_message,
      </if>
      <if test="lastUpdated != null" >
        last_updated,
      </if>
      <if test="jobConfigurationLocation != null" >
        job_configuration_location,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="jobExecutionId != null" >
        #{jobExecutionId,jdbcType=BIGINT},
      </if>
      <if test="version != null" >
        #{version,jdbcType=BIGINT},
      </if>
      <if test="jobInstanceId != null" >
        #{jobInstanceId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="exitCode != null" >
        #{exitCode,jdbcType=VARCHAR},
      </if>
      <if test="exitMessage != null" >
        #{exitMessage,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdated != null" >
        #{lastUpdated,jdbcType=TIMESTAMP},
      </if>
      <if test="jobConfigurationLocation != null" >
        #{jobConfigurationLocation,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.poc.dao.model.BatchJobExecution" >
    update batch_job_execution
    <set >
      <if test="version != null" >
        version = #{version,jdbcType=BIGINT},
      </if>
      <if test="jobInstanceId != null" >
        job_instance_id = #{jobInstanceId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="exitCode != null" >
        exit_code = #{exitCode,jdbcType=VARCHAR},
      </if>
      <if test="exitMessage != null" >
        exit_message = #{exitMessage,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdated != null" >
        last_updated = #{lastUpdated,jdbcType=TIMESTAMP},
      </if>
      <if test="jobConfigurationLocation != null" >
        job_configuration_location = #{jobConfigurationLocation,jdbcType=VARCHAR},
      </if>
    </set>
    where job_execution_id = #{jobExecutionId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.poc.dao.model.BatchJobExecution" >
    update batch_job_execution
    set version = #{version,jdbcType=BIGINT},
      job_instance_id = #{jobInstanceId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      exit_code = #{exitCode,jdbcType=VARCHAR},
      exit_message = #{exitMessage,jdbcType=VARCHAR},
      last_updated = #{lastUpdated,jdbcType=TIMESTAMP},
      job_configuration_location = #{jobConfigurationLocation,jdbcType=VARCHAR}
    where job_execution_id = #{jobExecutionId,jdbcType=BIGINT}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.example.poc.dao.model.BatchJobExecutionExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from batch_job_execution
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>